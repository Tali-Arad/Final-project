@model TourGuideWebsite.Models.ResetPassword

@{
    ViewBag.Title = "ResetPassword";
}

<h1 class="page-header">
    Reset your password
</h1>

@if(ViewBag.Message == null)
{ 

using (Html.BeginForm(new { @class = "form-horizontal", @role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(m => m.ReturnToken)

    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-sm-2" for="Password">Password:</label>
            <div class="col-sm-4">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @type = "password" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="ConfirmPassword">Confirm Password:</label>
            <div class="col-sm-4">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @type = "password" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
        </div>
        <div class="form-group">
            <div class="container">
                <div class="row">
                    <div class="col-sm-offset-2 col-sm-3 col-xs-12">
                        <input type="submit" class="btn btn-default" value="Submit" name="Reset" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
}

else
{ 

<div class="container">
    <h2>@ViewBag.Message</h2>
</div>
}

<!-- Exception msg-->
@if (TempData["Exception"] != null)
{
    <div class="container">
        <h2>@TempData["Exception"]</h2>
    </div>
}
