@model TourGuideWebsite.Models.RegResponse

@{
    ViewBag.Title = "RegForm";
}

<h1 class="page-header">
    Registration
</h1>

<ol class="breadcrumb">
    <li><a href="@Url.Action("Index")">Home</a> </li>
    <li><a href="#"></a>Registration Form</li>
    <li class="active">@Html.DisplayFor(model => model.EventInfo.TourName)</li>
</ol>

<div class="container">
    <h3>@Model.EventInfo.TourName</h3>
    <h3>@Model.EventInfo.TourDate.ToString("dd/MM/yyyy hh:mm")</h3>
</div>

@using (Html.BeginForm(new { @class = "form-horizontal", @role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.ValidationSummary(true)
    // Passing the rest of the fields to the controller (the div is hidden)
    <div hidden="hidden">
        @Html.EditorFor(x => x.EventInfo);
        @Html.EditorFor(x => x.UserInfo);
    </div>

    <div class="form-horizontal"> 
        <div class="form-group">
            <label class="control-label col-sm-2" for="FirstName">First Name:</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="LastName">Last Name:</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>
        <div class="container">
            <div class="row">
                <label class="control-label col-sm-2" for="RegBirthday">Birthday:</label>
                <div class='col-sm-4'>
                    <div class="form-group">
                        <div class='input-group date' id='datetimepicker2'>
                            @Html.TextBoxFor(model => model.Birthday, new { @class = "form-control", @type = "text" })
                            @Html.ValidationMessageFor(model => model.Birthday)
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {
                        $('#datetimepicker2').datetimepicker({ format: 'L' });
                    });
                </script>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="row">
                    @Html.CheckBoxFor(model => model.WillAttend, new { @id = "WillAttend" })
                    <label class="control-label" for="WillAttend">I will attend</label>
                    @Html.ValidationMessageFor(model => model.WillAttend)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    </div>
}

@*<h2>Registration Form</h2>
<div>
    <div>
        <span>@Model.EventInfo.TourName</span><br />
        <span>@Model.EventInfo.TourDate.ToString("dd/MM/yyyy hh:mm")</span><br />
    </div>

    <hr />
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        // Passing the rest of the fields to the controller (the div is hidden)
        <div hidden="hidden">
            @Html.EditorFor(x => x.EventInfo);
            @Html.EditorFor(x => x.UserInfo);
        </div>


        <p>First Name: @Html.EditorFor(x => x.FirstName) </p>
            <p>Last Name: @Html.EditorFor(x => x.LastName)</p>
            <p>Birthday: @Html.EditorFor(x => x.Birthday)</p>  //this needs to have a datetime picker
            <p>
                <div class="row">
                    @Html.CheckBoxFor(x => x.WillAttend) 
                    <label for="WillAttend">I will attend</label>
                </div>

                    @*Will you attend?
                @Html.DropDownListFor(x => x.WillAttend, new[] {
            new SelectListItem() {Text = "Yes, I'll be there",
                Value = bool.TrueString},
                new SelectListItem() {Text = "No, I can't come",  Value = bool.FalseString}
                }, "Choose an option")*@

@*</p>
            <input type="submit" value="Register" />
    }
</div>*@