@model TourGuideProtocol.DataStruct.AReg

@{
    ViewBag.Title = "Create";
}

<h1 class="page-header">
    Create Registation
</h1>

<ol class="breadcrumb">
    <li><a href="@Url.Action("Index")">Registration</a> </li>
    <li class="active"><a href="#"></a>Create</li>
</ol>

@using (Html.BeginForm(new { @class = "form-horizontal", @role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-sm-2" for="TourName">Tour Name:</label>
            <div class="col-sm-4">
                <div class="dropdown">
                    @Html.DropDownList("TourNameOptions", null, new { @class = "form-control", @id="tourName"})
                </div>
                @Html.ValidationMessageFor(model => model.TourName)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="TourDate">Tour Date:</label>
            <div class="col-sm-4">
                <div class="dropdown">
                    @Html.DropDownList("TourDateOptions", null, new { @class = "form-control", @id="tourDate" })                    
                </div>
                @Html.ValidationMessageFor(model => model.TourDate)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="UserName">Username:</label>
            <div class="col-sm-4">
                <div class="dropdown">
                    @Html.DropDownList("UsernameOptions", null, new { @class = "form-control", @id="userName" })
                </div>
                @Html.ValidationMessageFor(model => model.TourDate)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="RegFirstName">First Name:</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.RegFirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RegFirstName)
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="RegLastName">Last Name:</label>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.RegLastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RegLastName)
            </div>
        </div>
        <div class="container">
            <div class="row">
                <label class="control-label col-sm-2" for="RegBirthday">Birthday:</label>
                <div class='col-sm-4'>
                    <div class="form-group">
                        <div class='input-group date' id='datetimepicker2'>
                            @Html.TextBoxFor(model => model.RegBirthday, new { @class = "form-control", @type = "text" })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.RegBirthday)
                    </div>
                </div>
                <script type="text/javascript">
                    $(function () {
                        $('#datetimepicker2').datetimepicker({ format: 'L' });
                    });
                </script>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="row">
                    @Html.CheckBoxFor(model => model.WillAttend, new { @id = "WillAttend" })
                    <label class="control-label" for="WillAttend">Will attend</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="row">
                    @Html.CheckBoxFor(model => model.IsPaid, new { @id = "IsPaid" })
                    <label class="control-label" for="IsPaid">Paid</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="row">
                    @Html.CheckBoxFor(model => model.IsSentEmail, new { @id = "IsSentEmail" })
                    <label class="control-label" for="IsSentEmail">Email sent</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="row">
                    @Html.CheckBoxFor(model => model.Attended, new { @id = "Attended" })
                    <label class="control-label" for="Attended">Attended</label>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <input type="submit" class="btn btn-default" value="Save" id="submitbtn" />
            </div>
        </div>
    </div>
}

@*<script src="@Url.Content("~/JS/bootstrap-accessibility_1.0.3.min.js")"></script>*@
<script src="@Url.Content("~/JS/functions.js")"></script>
<script src="@Url.Content("~/JS/jquery.dataTables.min.js")"></script>
<script src="@Url.Content("~/JS/dataTables.bootstrap.js")"></script>

<script language="javascript">       
  
    $("#tourName").change(function () {
        var tourName = $(this).val();
        var Data = {
            Name: tourName
        }
        Type = "POST";
        Url = "http://localhost:53887/TourGuideSvc/TourGuideSvc.svc/GetTourDates"; // Do not hard code the URL! change this!
        ContentType = "application/json; charset=utf-8";
        DataType = "json"; varProcessData = true;

        $.ajax({
            type: Type,                   //GET or POST or PUT or DELETE verb
            url: Url,                     // Location of the service
            data: JSON.stringify(Data),             //Data sent to server
            contentType: ContentType,               // content type sent to server
            dataType: DataType,                     //Expected data format from server
            processdata: varProcessData,            //True or False
            success: function (msg) {               //On Successfull service call
                GetTourDatesSucceeded(msg);
            },
            error: ServiceFailed// When Service call fails
        });
    }
    )

 function ServiceFailed(result) {
        alert('Service call failed: ' + result.status + ' ' + result.statusText);
        Type = null;
        varUrl = null;
        Data = null;
        ContentType = null;
        DataType = null;
        ProcessData = null;
    }
    var tourDates = $('#tourDate');
    
    function GetTourDatesSucceeded(result) {    
       // console.log("GetTourDatesSucceeded")
        var tourDates = $('#tourDate');
        tourDates.empty();
        $.each(result, function (index, item) {
         //   console.log(item);
          //  console.log("Create Dropdown")
            tourDates.append("<option>" + this.Value + "</option>");

            // The following does not allow TourDateOptions choice to be passed back to the server:
            //$(document.createElement('option'))
            ////.attr('value', this)
            ////.text(this.Value)
            ////.appendTo(tourDates);
                });
        }
</script>